import streamlit as st
import pandas as pd
import time
import random
from datetime import datetime

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏à
st.set_page_config(
    page_title="RoomLab - ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ AI",
    page_icon="üè†",
    layout="wide",
    initial_sidebar_state="expanded"
)

# ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô session state
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = True
if 'username' not in st.session_state:
    st.session_state.username = "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢"
if 'tokens' not in st.session_state:
    st.session_state.tokens = 10
if 'active_tab' not in st.session_state:
    st.session_state.active_tab = "create_design"
if 'design_step' not in st.session_state:
    st.session_state.design_step = 1  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å
if 'projects' not in st.session_state:
    st.session_state.projects = []
if 'generated_images' not in st.session_state:
    # ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å generate ‡πÑ‡∏ß‡πâ
    st.session_state.generated_images = {
        1: "https://via.placeholder.com/750x500?text=Generated+Design+View+1",
        2: "https://via.placeholder.com/750x500?text=Generated+Design+View+2",
        3: "https://via.placeholder.com/750x500?text=Generated+Design+View+3",
        4: "https://via.placeholder.com/750x500?text=Generated+Design+View+4"
    }
if 'design_details' not in st.session_state:
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
    st.session_state.design_details = {
        "project_name": "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
        "room_type": "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô",
        "room_size": "35 ‡∏ï‡∏£.‡∏°.",
        "room_shape": "‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏ú‡∏∑‡∏ô‡∏ú‡πâ‡∏≤",
        "design_style": "‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô",
        "color_theme": "‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ò‡πÇ‡∏ó‡∏ô",
        "main_furniture": "‡πÇ‡∏ã‡∏ü‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà 3 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á, ‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏£‡∏á‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°, ‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ‡∏ï‡∏¥‡∏î‡∏ú‡∏ô‡∏±‡∏á",
        "additional_furniture": "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô, ‡πÇ‡∏Ñ‡∏°‡πÑ‡∏ü‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏∑‡πâ‡∏ô, ‡∏û‡∏£‡∏°",
        "decor_level": "‡∏£‡∏∞‡∏î‡∏±‡∏ö 3",
        "created_date": "02/03/2025",
        "status": "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå",
        "tokens_used": 1
    }
if 'saved_notes' not in st.session_state:
    st.session_state.saved_notes = []  # ‡πÄ‡∏Å‡πá‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
if 'comments' not in st.session_state:
    st.session_state.comments = []  # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
if 'regenerate_count' not in st.session_state:
    st.session_state.regenerate_count = 0  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà regenerate

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
def change_tab(tab):
    st.session_state.active_tab = tab

def set_design_step(step):
    st.session_state.design_step = step

def set_result_tab(tab):
    st.session_state.result_tab = tab

def set_selected_view(view):
    st.session_state.selected_view = view

def regenerate_design():
    # ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
    if st.session_state.tokens >= 1:
        st.session_state.tokens -= 1
        st.session_state.regenerate_count += 1
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ)
        timestamp = int(time.time())
        for i in range(1, 5):
            st.session_state.generated_images[i] = f"https://via.placeholder.com/750x500?text=Regenerated+Design+View+{i}+({st.session_state.regenerate_count})"
        
        return True
    else:
        return False

def save_design_data(data):
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
    if 'design_data' not in st.session_state:
        st.session_state.design_data = {}
    
    st.session_state.design_data.update(data)
    return True

def calculate_total_price():
    # ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BOQ items
    boq_items = [
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÇ‡∏ã‡∏ü‡∏≤ 3 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", "brand": "IKEA", "model": "KIVIK", "price": 25000, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á", "brand": "IKEA", "model": "LACK", "price": 3500, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ", "brand": "IKEA", "model": "BESTA", "price": 12000, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô", "brand": "IKEA", "model": "PO√ÑNG", "price": 8500, "quantity": 1},
        {"category": "‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡πÇ‡∏Ñ‡∏°‡πÑ‡∏ü‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏∑‡πâ‡∏ô", "brand": "IKEA", "model": "HEKTAR", "price": 2500, "quantity": 1},
        {"category": "‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡∏û‡∏£‡∏°", "brand": "IKEA", "model": "VINDUM", "price": 6000, "quantity": 1},
    ]
    total = 0
    for item in boq_items:
        total += item["price"] * item["quantity"]
    return total

# CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
def load_css():
    return """
    <style>
    /* ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏° */
    .main {
        background-color: #f8f9fa;
    }
    
    /* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö header */
    .stApp header {
        background-color: #ffffff;
        border-bottom: 1px solid #dee2e6;
    }
    
    /* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sidebar ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏° #212130 */
    [data-testid="stSidebar"] {
        background-color: #212130;
    }
    [data-testid="stSidebar"] > div:first-child {
        background-color: #212130;
    }
    [data-testid="stSidebar"] .stButton button {
        background-color: #2d2d3e;
        color: white;
        border: none;
    }
    [data-testid="stSidebar"] .stButton button:hover {
        background-color: #3d3d4f;
    }
    [data-testid="stSidebar"] p, [data-testid="stSidebar"] span {
        color: #ffffff;
    }
    [data-testid="stSidebar"] button[kind="secondary"] {
        background-color: #2d2d3e;
        color: white;
        border: none;
    }
    [data-testid="stSidebar"] hr {
        border-color: #3d3d4f;
    }
    
    /* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô */
    .progress-tracker {
        display: flex;
        align-items: center;
        background-color: #e9ecef;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1.5rem;
    }
    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-right: 1rem;
    }
    .step-circle {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #343a40;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }
    .step-circle.active {
        background-color: #6d63ff;
        color: white;
    }
    .step-circle.completed {
        background-color: #28a745;
        color: white;
    }
    .step-connector {
        height: 2px;
        width: 50px;
        background-color: #dee2e6;
        margin: 0 0.5rem;
    }
    .step-connector.active {
        background-color: #28a745;
    }
    
    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡πå‡∏î */
    .card {
        background-color: white;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        margin-bottom: 1rem;
    }
    
    /* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */
    .result-image {
        width: 100%;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }
    
    /* ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á */
    .view-selector {
        display: flex;
        background-color: #f8f9fa;
        border-radius: 30px;
        margin: 1rem 0;
        overflow: hidden;
    }
    .view-option {
        flex: 1;
        text-align: center;
        padding: 0.75rem 1rem;
        cursor: pointer;
    }
    .view-option.active {
        background-color: #6d63ff;
        color: white;
    }
    
    /* ‡πÅ‡∏ó‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */
    .detail-tabs {
        display: flex;
        border-bottom: 1px solid #dee2e6;
        margin-bottom: 1.5rem;
    }
    .detail-tab {
        padding: 0.75rem 1.5rem;
        cursor: pointer;
        border-bottom: 3px solid transparent;
    }
    .detail-tab.active {
        border-bottom-color: #6d63ff;
        font-weight: bold;
        color: #6d63ff;
    }
    
    /* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */
    .detail-row {
        display: flex;
        margin-bottom: 1rem;
        align-items: flex-start;
    }
    .detail-label {
        font-weight: bold;
        width: 180px;
        margin-right: 1rem;
    }
    .detail-value {
        flex: 1;
    }
    
    /* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */
    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.85rem;
    }
    .status-completed {
        background-color: #d4edda;
        color: #155724;
    }
    .status-processing {
        background-color: #fff3cd;
        color: #856404;
    }
    
    /* ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô */
    .notes-panel {
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        padding: 1rem;
        height: 100%;
    }
    .note-card {
        background-color: #f8f9fa;
        border-radius: 0.25rem;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
        cursor: pointer;
    }
    .add-note {
        text-align: center;
        border: 1px dashed #dee2e6;
        border-radius: 0.25rem;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
        cursor: pointer;
    }
    
    /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô */
    .stButton button {
        border-radius: 0.25rem;
    }
    
    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô (header) */
    .roomlab-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        margin-bottom: 2rem;
    }
    .roomlab-logo {
        font-size: 1.75rem;
        font-weight: bold;
        color: #6d63ff;
    }
    .roomlab-subtitle {
        font-size: 1rem;
        color: #6c757d;
    }
    
    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå Token ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */
    .token-display {
        display: inline-block;
        background-color: #f0f4f8;
        padding: 0.5rem 1rem;
        border-radius: 1rem;
        font-weight: bold;
        color: #6d63ff;
    }
    
    /* BOQ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á */
    .boq-table {
        width: 100%;
        border-collapse: collapse;
    }
    .boq-table th, .boq-table td {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #dee2e6;
        text-align: left;
    }
    .boq-table th {
        background-color: #f8f9fa;
        font-weight: bold;
    }
    .category-header {
        background-color: #e9ecef;
        font-weight: bold;
    }
    </style>
    """

# ‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå RoomLab
def display_brand_header():
    st.markdown(f"""
    <div class="roomlab-header">
        <div>
            <div class="roomlab-logo">RoomLab</div>
            <div class="roomlab-subtitle">‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏î‡πâ‡∏ß‡∏¢ AI</div>
        </div>
        <div class="token-display">
            üíé {st.session_state.tokens} Tokens ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
        </div>
    </div>
    """, unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sidebar
def render_sidebar():
    with st.sidebar:
        # ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        col1, col2 = st.columns([1, 3])
        with col1:
            st.markdown('<div style="background-color: #6d63ff; width: 60px; height: 60px; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 20px;">RL</div>', unsafe_allow_html=True)
        with col2:
            st.markdown(f"**{st.session_state.username}**")
            st.markdown(f"<span style='color: #6d63ff;'>{st.session_state.tokens} Tokens</span>", unsafe_allow_html=True)
        
        st.markdown("---")
        
        # ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
        menu_items = {
            "home": "üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            "create_design": "üé® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå",
            "my_projects": "üìÇ ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô",
            "buy_token": "ü™ô ‡∏ã‡∏∑‡πâ‡∏≠ Token",
            "pricing": "üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤",
            "history": "üìä ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
            "settings": "‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
        }
        
        for key, label in menu_items.items():
            if st.button(label, key=f"menu_{key}", use_container_width=True, 
                       type="primary" if st.session_state.active_tab == key else "secondary"):
                change_tab(key)
                st.experimental_rerun()
        
        # ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        st.markdown('<div style="position: fixed; bottom: 60px; width: 17%;"></div>', unsafe_allow_html=True)
        st.markdown("---")
        if st.button("üì§ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", use_container_width=True):
            st.session_state.logged_in = False
            st.experimental_rerun()

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
def render_progress_tracker():
    steps = [
        {"num": 1, "name": "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "status": "active" if st.session_state.design_step == 1 else ("completed" if st.session_state.design_step > 1 else "")},
        {"num": 2, "name": "‡∏™‡πÑ‡∏ï‡∏•‡πå", "status": "active" if st.session_state.design_step == 2 else ("completed" if st.session_state.design_step > 2 else "")},
        {"num": 3, "name": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "status": "active" if st.session_state.design_step == 3 else ("completed" if st.session_state.design_step > 3 else "")},
        {"num": 4, "name": "‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", "status": "active" if st.session_state.design_step == 4 else ("completed" if st.session_state.design_step > 4 else "")},
        {"num": 5, "name": "BOQ", "status": "active" if st.session_state.design_step == 5 else ""}
    ]
    
    st.markdown("""
    <div class="progress-tracker">
    """, unsafe_allow_html=True)
    
    for i, step in enumerate(steps):
        status_class = ""
        content = str(step["num"])
        
        if step["status"] == "completed":
            status_class = "completed"
            content = "‚úì"
        elif step["status"] == "active":
            status_class = "active"
        
        connector_class = "active" if i < len(steps) - 1 and (steps[i]["status"] == "completed" or steps[i+1]["status"] == "active" or steps[i+1]["status"] == "completed") else ""
        
        st.markdown(f"""
        <div style="display: flex; align-items: center;">
            <div class="progress-step">
                <div class="step-circle {status_class}">{content}</div>
                <div class="step-name">{step["name"]}</div>
            </div>
            {f'<div class="step-connector {connector_class}"></div>' if i < len(steps) - 1 else ''}
        </div>
        """, unsafe_allow_html=True)
    
    st.markdown("""
    </div>
    """, unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1)
def render_first_step():
    st.markdown("<h2>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà</h2>", unsafe_allow_html=True)
    st.markdown("<p>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>", unsafe_allow_html=True)
    
    # Card ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
    
    with st.form("design_form_step1"):
        project_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ", value="‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢")
        
        col1, col2 = st.columns(2)
        with col1:
            room_type = st.selectbox("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á", 
                                   ["‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô", "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô", "‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß", "‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥"])
            room_size = st.number_input("‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á (‡∏ï‡∏£.‡∏°.)", min_value=1, value=35)
        
        with col2:
            room_shape = st.selectbox("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á", 
                                    ["‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏ú‡∏∑‡∏ô‡∏ú‡πâ‡∏≤", "‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏±‡∏ï‡∏∏‡∏£‡∏±‡∏™", "‡∏ï‡∏±‡∏ß‡πÅ‡∏≠‡∏• (L-Shape)", "‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏•‡πà‡∏á"])
            ceiling_height = st.selectbox("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏û‡∏î‡∏≤‡∏ô (‡πÄ‡∏°‡∏ï‡∏£)", 
                                        ["2.4", "2.7", "3.0", "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 3.0"])
        
        additional_details = st.text_area("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", 
                                       "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏ã‡∏ü‡∏≤ ‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á ‡∏ó‡∏µ‡∏ß‡∏µ ‡πÅ‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
        st.markdown("<br>", unsafe_allow_html=True)
        col3, col4, col5, col6 = st.columns([2, 1, 1, 1.5])  # ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 4 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        
        with col4:
            cancel_button = st.form_submit_button("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", use_container_width=True)
        
        with col5:
            next_button = st.form_submit_button("‡∏ñ‡∏±‡∏î‡πÑ‡∏õ", type="primary", use_container_width=True)
        
        with col6:
            generate_button = st.form_submit_button("‚ú® Generate ‡∏†‡∏≤‡∏û‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", 
                                                 type="primary", 
                                                 use_container_width=True,
                                                 help="‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå")
        
        # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Token
        st.markdown("<div style='text-align: right; font-size: 0.8rem; color: #6d63ff; margin-top: 0.5rem;'>‡∏Å‡∏≤‡∏£ Generate ‡∏†‡∏≤‡∏û‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏à‡∏∞‡πÉ‡∏ä‡πâ 1 Token ‡∏à‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>", unsafe_allow_html=True)
            
        if next_button:
            if project_name:
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                design_data = {
                    "project_name": project_name,
                    "room_type": room_type,
                    "room_size": room_size,
                    "room_shape": room_shape,
                    "ceiling_height": ceiling_height,
                    "additional_details": additional_details
                }
                
                if save_design_data(design_data):
                    # ‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                    set_design_step(2)
                    st.experimental_rerun()
            else:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ")
        
        if generate_button:
            if project_name:
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                design_data = {
                    "project_name": project_name,
                    "room_type": room_type,
                    "room_size": room_size,
                    "room_shape": room_shape,
                    "ceiling_height": ceiling_height,
                    "additional_details": additional_details,
                    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                    "design_style": "‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô",  # ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                    "color_theme": "‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ò‡πÇ‡∏ó‡∏ô",  # ‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                    "main_furniture": f"‡πÇ‡∏ã‡∏ü‡∏≤, ‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á, ‡∏ó‡∏µ‡∏ß‡∏µ, ‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠",  # ‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                    "decor_level": "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏•‡∏≤‡∏á"  # ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                }
                
                if save_design_data(design_data):
                    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Token ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                    if st.session_state.tokens >= 1:
                        st.session_state.tokens -= 1  # ‡∏´‡∏±‡∏Å Token
                        # ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4 (‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå) ‡πÄ‡∏•‡∏¢
                        set_design_step(4)
                        st.experimental_rerun()
                    else:
                        st.error("Token ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ã‡∏∑‡πâ‡∏≠ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°")
            else:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ")
    
    st.markdown("</div>", unsafe_allow_html=True)
    
    # ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    st.info("üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô")
    
    # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô
    st.markdown("<h3>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</h3>", unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô 3 ‡∏£‡∏π‡∏õ
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.image("https://via.placeholder.com/300x200?text=Example+1", use_column_width=True)
        st.markdown("<p style='text-align: center;'>‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô</p>", unsafe_allow_html=True)
    
    with col2:
        st.image("https://via.placeholder.com/300x200?text=Example+2", use_column_width=True)
        st.markdown("<p style='text-align: center;'>‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏°‡∏¥‡∏ô‡∏¥‡∏°‡∏≠‡∏•</p>", unsafe_allow_html=True)
    
    with col3:
        st.image("https://via.placeholder.com/300x200?text=Example+3", use_column_width=True)
        st.markdown("<p style='text-align: center;'>‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡πÅ‡∏Å‡∏ô‡∏î‡∏¥‡πÄ‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô</p>", unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4)
def render_design_results():
    if 'selected_view' not in st.session_state:
        st.session_state.selected_view = 1  # ‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1-4)
    if 'result_tab' not in st.session_state:
        st.session_state.result_tab = "details"  # details, edit, or save
    
    st.markdown("<h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö</h2>", unsafe_allow_html=True)
    st.markdown("<hr>", unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    col1, col2 = st.columns([5, 1])
    
    with col1:
        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        selected_image = st.session_state.generated_images[st.session_state.selected_view]
        st.image(selected_image, use_column_width=True, caption=f"‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏ó‡∏µ‡πà {st.session_state.selected_view}")
        
        # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á
        view_col1, view_col2, view_col3, view_col4 = st.columns(4)
        
        view_cols = [view_col1, view_col2, view_col3, view_col4]
        for i, col in enumerate(view_cols, 1):
            with col:
                if st.button(f"‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏ó‡∏µ‡πà {i}", key=f"view_{i}", 
                           use_container_width=True,
                           type="primary" if st.session_state.selected_view == i else "secondary"):
                    st.session_state.selected_view = i
                    st.experimental_rerun()
    
    with col2:
        st.markdown("<div class='notes-panel'>", unsafe_allow_html=True)
        st.markdown("<h4 style='text-align: center;'>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</h4>", unsafe_allow_html=True)
        st.markdown("<hr>", unsafe_allow_html=True)
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        for i, note in enumerate(st.session_state.saved_notes):
            st.markdown(f"""
            <div class="note-card">
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å {i+1}
            </div>
            """, unsafe_allow_html=True)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        if st.button("+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", key="add_note"):
            st.session_state.saved_notes.append(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å {len(st.session_state.saved_notes) + 1}")
        
        st.markdown("<h4 style='text-align: center; margin-top: 1rem;'>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô</h4>", unsafe_allow_html=True)
        st.markdown("<hr>", unsafe_allow_html=True)
        
        # ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
        comment = st.text_area("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô", key="comment_input", label_visibility="collapsed", height=100)
        if st.button("‡∏™‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô", key="submit_comment"):
            if comment:
                st.session_state.comments.append(comment)
                st.experimental_rerun()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        for comment in st.session_state.comments:
            st.markdown(f"""
            <div style="background-color: #f0f4f8; padding: 0.5rem; border-radius: 0.25rem; margin-bottom: 0.5rem; font-size: 0.85rem;">
                {comment}
            </div>
            """, unsafe_allow_html=True)
            
        st.markdown("</div>", unsafe_allow_html=True)
    
    # ‡πÅ‡∏ó‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    tabs = st.tabs(["‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö", "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞ Regenerate", "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠"])
    
    with tabs[0]:
        # ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
        st.markdown("<div class='card'>", unsafe_allow_html=True)
        
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö")
        
        details = st.session_state.design_details
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ:**")
            st.write(details["project_name"])
            
            st.markdown("**‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á:**")
            st.write(details["room_type"])
            
            st.markdown("**‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á:**")
            st.write(details["room_size"])
            
            st.markdown("**‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á:**")
            st.write(details["room_shape"])
            
            st.markdown("**‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö:**")
            st.write(details["design_style"])
        
        with col2:
            st.markdown("**‡πÇ‡∏ó‡∏ô‡∏™‡∏µ:**")
            st.write(details["color_theme"])
            
            st.markdown("**‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å:**")
            st.write(details["main_furniture"])
            
            st.markdown("**‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°:**")
            st.write(details["additional_furniture"])
            
            st.markdown("**‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á:**")
            st.write(details["decor_level"])
            
            st.markdown("**Token ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:**")
            st.write(f"{details['tokens_used']} Token")
        
        st.markdown("</div>", unsafe_allow_html=True)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
        col1, col2, col3 = st.columns([1, 1, 2])
        
        with col1:
            if st.button("‚óÄ ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", use_container_width=True):
                set_design_step(3)  # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3
                st.experimental_rerun()
        
        with col2:
            if st.button("üîÑ Regenerate", use_container_width=True, type="warning"):
                st.experimental_rerun()
        
        with col3:
            if st.button("‡∏ñ‡∏±‡∏î‡πÑ‡∏õ: ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î BOQ ‚ñ∂", use_container_width=True, type="primary"):
                set_design_step(5)  # ‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô BOQ
                st.experimental_rerun()
        
        # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        st.info(f"üí° ‡∏Å‡∏≤‡∏£ Regenerate ‡∏à‡∏∞‡πÉ‡∏ä‡πâ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 1 ‡∏î‡∏ß‡∏á (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {st.session_state.tokens} Token)")
        st.success("‚≠ê ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÑ‡∏î‡πâ")
    
    with tabs[1]:
        # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞ Regenerate
        st.markdown("<div class='card'>", unsafe_allow_html=True)
        
        st.subheader("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞ Regenerate")
        
        with st.form("edit_form"):
            col1, col2 = st.columns(2)
            
            with col1:
                design_style = st.selectbox("‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö", 
                                        ["‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô", "‡∏°‡∏¥‡∏ô‡∏¥‡∏°‡∏≠‡∏•", "‡∏•‡∏≠‡∏ü‡∏ó‡πå", "‡∏™‡πÅ‡∏Å‡∏ô‡∏î‡∏¥‡πÄ‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô", "‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ"],
                                        index=0)
                
                color_theme = st.selectbox("‡πÇ‡∏ó‡∏ô‡∏™‡∏µ", 
                                        ["‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ò‡πÇ‡∏ó‡∏ô", "‡πÇ‡∏°‡πÇ‡∏ô‡πÇ‡∏ó‡∏ô", "‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•", "‡∏™‡∏µ‡∏ü‡πâ‡∏≤", "‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß"],
                                        index=0)
                
                sofa_type = st.selectbox("‡πÇ‡∏ã‡∏ü‡∏≤", 
                                        ["‡πÇ‡∏ã‡∏ü‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà 3 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", "‡πÇ‡∏ã‡∏ü‡∏≤‡∏ï‡∏±‡∏ß L", "‡πÇ‡∏ã‡∏ü‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á 2 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", "‡πÇ‡∏ã‡∏ü‡∏≤‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß + ‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ"],
                                        index=0)
            
            with col2:
                table_type = st.selectbox("‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á", 
                                        ["‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏£‡∏á‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°", "‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏£‡∏á‡∏Å‡∏•‡∏°", "‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏£‡∏á‡∏£‡∏µ", "‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß"],
                                        index=0)
                
                tv_stand = st.selectbox("‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ", 
                                    ["‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ‡∏ï‡∏¥‡∏î‡∏ú‡∏ô‡∏±‡∏á", "‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡∏ß‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà", "‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ‡πÅ‡∏ö‡∏ö‡∏•‡∏≠‡∏¢", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ"],
                                    index=0)
                
                decor_level = st.slider("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", 1, 5, 3)
            
            specific_requirements = st.text_area("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°")
            
            st.markdown(f"""
            <div style="background-color: #fff3cd; border: 1px solid #ffeeba; border-radius: 0.25rem; padding: 1rem; margin: 1rem 0;">
                <b>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</b> ‡∏Å‡∏≤‡∏£ Regenerate ‡∏à‡∏∞‡πÉ‡∏ä‡πâ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 1 ‡∏î‡∏ß‡∏á (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {st.session_state.tokens} Token)
            </div>
            """, unsafe_allow_html=True)
            
            col3, col4 = st.columns([1, 1])
            
            with col3:
                back_button = st.form_submit_button("‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", use_container_width=True)
            
            with col4:
                regenerate_button = st.form_submit_button("Regenerate", use_container_width=True, type="primary")
            
            if back_button:
                st.experimental_rerun()
            
            if regenerate_button:
                if regenerate_design():
                    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
                    st.session_state.design_details["design_style"] = design_style
                    st.session_state.design_details["color_theme"] = color_theme
                    st.session_state.design_details["main_furniture"] = f"{sofa_type}, {table_type}, {tv_stand}"
                    st.session_state.design_details["decor_level"] = f"‡∏£‡∏∞‡∏î‡∏±‡∏ö {decor_level}"
                    st.session_state.design_details["tokens_used"] += 1
                    
                    st.success("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                    st.experimental_rerun()
                else:
                    st.error("Token ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ã‡∏∑‡πâ‡∏≠ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°")
        
        st.markdown("</div>", unsafe_allow_html=True)
    
    with tabs[2]:
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
        st.markdown("<div class='card'>", unsafe_allow_html=True)
        
        st.subheader("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("<h4>‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</h4>", unsafe_allow_html=True)
            
            save_options = [
                "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (JPG)",
                "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á (PNG)",
                "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏∏‡∏Å‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á (ZIP)",
                "‡πÅ‡∏ä‡∏£‡πå‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
            ]
            
            selected_save_option = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", save_options)
            
            email = st.text_input("‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")
            
            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", type="primary", use_container_width=True):
                st.success(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ: {selected_save_option}")
        
        with col2:
            st.markdown("<h4>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</h4>", unsafe_allow_html=True)
            
            st.markdown("""
            <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠:</p>
            <ul>
                <li>‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏•‡∏∞‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå (BOQ)</li>
                <li>‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á</li>
                <li>‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</li>
            </ul>
            """, unsafe_allow_html=True)
            
            if st.button("‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î BOQ", type="primary", use_container_width=True):
                set_design_step(5)  # ‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô BOQ
                st.experimental_rerun()
            
            if st.button("‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", use_container_width=True):
                st.info("‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á")
        
        st.markdown("</div>", unsafe_allow_html=True)
        
        st.markdown("<div class='card'>", unsafe_allow_html=True)
        st.subheader("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°")
        
        col3, col4 = st.columns(2)
        
        with col3:
            st.markdown("""
            <p>‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:</p>
            <ul>
                <li>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà</li>
                <li>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô</li>
            </ul>
            """, unsafe_allow_html=True)
            
            if st.button("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà", use_container_width=True):
                set_design_step(1)  # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å
                st.experimental_rerun()
        
        with col4:
            st.markdown(f"""
            <p>Token ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</p>
            <h3 style="color: #6d63ff;">{st.session_state.tokens} Token</h3>
            <p>‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°?</p>
            """, unsafe_allow_html=True)
            
            if st.button("‡∏ã‡∏∑‡πâ‡∏≠ Token ‡πÄ‡∏û‡∏¥‡πà‡∏°", type="primary", use_container_width=True):
                change_tab("buy_token")
                st.experimental_rerun()
        
        st.markdown("</div>", unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ BOQ (‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5)
def render_boq_page():
    st.markdown("<h2>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î BOQ (Bill of Quantities)</h2>", unsafe_allow_html=True)
    st.markdown("<hr>", unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
    col1, col2 = st.columns([2, 3])
    
    with col1:
        selected_image = st.session_state.generated_images[1]  # ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û‡πÅ‡∏£‡∏Å
        st.image(selected_image, use_column_width=True, caption="‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö")
    
    with col2:
        st.markdown("<div class='card'>", unsafe_allow_html=True)
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ")
        
        details = st.session_state.design_details
        
        col3, col4 = st.columns(2)
        
        with col3:
            st.markdown("**‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ:**")
            st.write(details["project_name"])
            
            st.markdown("**‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á:**")
            st.write(details["room_type"])
        
        with col4:
            st.markdown("**‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á:**")
            st.write(details["room_size"])
            
            st.markdown("**‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö:**")
            st.write(details["design_style"])
        
        st.markdown("</div>", unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ BOQ
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏•‡∏∞‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö BOQ
    boq_items = [
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÇ‡∏ã‡∏ü‡∏≤ 3 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", "brand": "IKEA", "model": "KIVIK", "price": 25000, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏•‡∏≤‡∏á", "brand": "IKEA", "model": "LACK", "price": 3500, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡∏ß‡∏µ", "brand": "IKEA", "model": "BESTA", "price": 12000, "quantity": 1},
        {"category": "‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "item": "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô", "brand": "IKEA", "model": "PO√ÑNG", "price": 8500, "quantity": 1},
        {"category": "‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡πÇ‡∏Ñ‡∏°‡πÑ‡∏ü‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏∑‡πâ‡∏ô", "brand": "IKEA", "model": "HEKTAR", "price": 2500, "quantity": 1},
        {"category": "‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡∏û‡∏£‡∏°", "brand": "IKEA", "model": "VINDUM", "price": 6000, "quantity": 1},
        {"category": "‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡∏´‡∏°‡∏≠‡∏ô‡∏≠‡∏¥‡∏á", "brand": "IKEA", "model": "SANELA", "price": 750, "quantity": 4},
        {"category": "‡∏™‡∏µ", "item": "‡∏™‡∏µ‡∏ú‡∏ô‡∏±‡∏á", "brand": "TOA", "model": "SUPER SHIELD MATT", "price": 1200, "quantity": 2},
        {"category": "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", "item": "‡∏ß‡∏≠‡∏•‡πÄ‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå", "brand": "GOODRICH", "model": "Modern Pattern", "price": 5500, "quantity": 1},
        {"category": "‡∏≠‡∏∑‡πà‡∏ô‡πÜ", "item": "‡∏Ñ‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á", "brand": "-", "model": "-", "price": 15000, "quantity": 1}
    ]
    
    # ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    boq_by_category = {}
    for item in boq_items:
        category = item["category"]
        if category not in boq_by_category:
            boq_by_category[category] = []
        boq_by_category[category].append(item)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á BOQ
    for category, items in boq_by_category.items():
        st.markdown(f"#### {category}")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        data = []
        for item in items:
            total_price = item["price"] * item["quantity"]
            data.append({
                "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": item["item"],
                "‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå": item["brand"],
                "‡∏£‡∏∏‡πà‡∏ô": item["model"],
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": item["quantity"],
                "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢": f"{item['price']:,} ‡∏ö‡∏≤‡∏ó",
                "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°": f"{total_price:,} ‡∏ö‡∏≤‡∏ó"
            })
        
        df = pd.DataFrame(data)
        st.dataframe(df, use_container_width=True, hide_index=True)
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    total_price = sum(item["price"] * item["quantity"] for item in boq_items)
    st.markdown(f"#### ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_price:,} ‡∏ö‡∏≤‡∏ó")
    
    st.markdown("</div>", unsafe_allow_html=True)
    
    # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
    col5, col6, col7 = st.columns([1, 1, 2])
    
    with col5:
        if st.button("‚óÄ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå", use_container_width=True):
            set_design_step(4)  # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4
            st.experimental_rerun()
    
    with col6:
        if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å BOQ", use_container_width=True):
            st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å BOQ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
    
    with col7:
        if st.button("üìã ‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", type="primary", use_container_width=True):
            st.success("‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á")
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    st.info("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏£‡∏¥‡∏á")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
def main():
    # ‡πÇ‡∏´‡∏•‡∏î CSS
    st.markdown(load_css(), unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á Header ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå RoomLab
    display_brand_header()
    
    # ‡πÅ‡∏™‡∏î‡∏á Sidebar
    render_sidebar()
    
    # ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å
    container = st.container()
    
    with container:
        # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        render_progress_tracker()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if st.session_state.active_tab == "create_design":
            # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
            if st.session_state.design_step == 1:
                render_first_step()
            elif st.session_state.design_step == 4:
                render_design_results()
            elif st.session_state.design_step == 5:
                render_boq_page()
            else:
                # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤ (2 ‡πÅ‡∏•‡∏∞ 3)
                st.info(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà {st.session_state.design_step} - ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤")
                # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
                col1, col2 = st.columns(2)
                with col1:
                    if st.button("‚óÄ ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", use_container_width=True):
                        set_design_step(st.session_state.design_step - 1)
                        st.experimental_rerun()
                with col2:
                    if st.button("‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚ñ∂", use_container_width=True, type="primary"):
                        set_design_step(st.session_state.design_step + 1)
                        st.experimental_rerun()
        else:
            # ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤)
            st.info(f"‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ '{st.session_state.active_tab}' - ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤")
            if st.button("‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå", type="primary"):
                change_tab("create_design")
                st.experimental_rerun()

if __name__ == "__main__":
    main()
